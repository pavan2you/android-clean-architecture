apply plugin: 'maven-publish'
apply from: "$rootDir/gradle/properties.gradle"

ext {
    artifactIdName = "tagd-droid"

    projectName = "${project.getName()}"
    projectUrl = "${gitRepoUrl}/architecture/${projectName}"
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {

    publications {

        aar(MavenPublication) {
            groupId artifactGroupId
            artifactId artifactIdName
            version = artifactVersionName

            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/$projectName-release.aar")

            pom {
                name = artifactIdName
                description = 'The technology agnostic clean architecture\'s depenency ' +
                        'injection setup'
                url = projectUrl

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection = "scm:git:github.com/${gitProject}"
                    developerConnection = "scm:git:ssh://github.com/${gitProject}"
                    url = projectUrl
                }

                withXml {
                    def dependencies = asNode().appendNode('dependencies')

                    // include any sibling dependencies
                    def siblingDependencies = [
                            'tagd-core',
                            'tagd-arch',
                            'tagd-di',
                            'tagd-langx',
                            'tagd-androidx'
                    ]
                    siblingDependencies.each {
                        def dependency = dependencies.appendNode('dependency')
                        dependency.appendNode('groupId', artifactGroupId)
                        dependency.appendNode('artifactId', it)
                        dependency.appendNode('version', artifactVersionName)
                    }

                    // include any transitive dependencies
                    configurations.implementation.allDependencies.each {
                        handleDependencies(it, dependencies)
                    }
                    configurations.api.allDependencies.each {
                        handleDependencies(it, dependencies)
                    }
                }
            }
        }
    }

    repositories {

        if (!canPublishRemote) {
            maven {
                name = 'tagd-libraries'
                url = "file://${buildDir}/repos"
            }
        } else {

            maven {
                name = "sonaMaven"

                def releaseUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotUrl : releaseUrl

                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

private void handleDependencies(Dependency dep, Node dependencies) {
    if (dep.group == null
            || dep.group == 'com.android.databinding'
            || !dep.name.startsWith("tagd-")
            || dep.version == 'unspecified') {
        println("ignoring dependency ${dep.group}:${dep.name}:${dep.version}")
        return
    }

    def dependency = dependencies.appendNode('dependency')
    dependency.appendNode('groupId', dep.group)
    println(dep.group)
    println(dep.version)
    println(dep.name)
    dependency.appendNode('artifactId', dep.name)
    dependency.appendNode('version', dep.version)
}